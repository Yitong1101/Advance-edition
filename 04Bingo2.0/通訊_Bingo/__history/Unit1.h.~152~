//---------------------------------------------------------------------------

#ifndef Unit1H
#define Unit1H
//---------------------------------------------------------------------------
#include <System.Classes.hpp>
#include <Vcl.Controls.hpp>
#include <Vcl.StdCtrls.hpp>
#include <Vcl.Forms.hpp>
#include <Vcl.Menus.hpp>
#include <Vcl.ComCtrls.hpp>
#include <System.Win.ScktComp.hpp>
#include <Vcl.Buttons.hpp>
#include <Vcl.ExtCtrls.hpp>
//---------------------------------------------------------------------------
class TForm1 : public TForm
{
__published:	// IDE-managed Components
	TMainMenu *MainMenu1;
	TMenuItem *Port2;
	TStatusBar *StatusBar1;
	TServerSocket *ServerSocket1;
	TClientSocket *ClientSocket1;
	TMenuItem *Receivelog1;
	TMenuItem *Receivelog2;
	TLabel *Label1;
	TLabel *Label2;
	TLabel *Label3;
	TLabel *Label4;
	TLabel *Label5;
	TTimer *Timer1;
	TMemo *Memo2;
	TTimer *Timer2;
	TTimer *Timer3;
	TMenuItem *Tool;
	TMenuItem *Listen;
	TMenuItem *Connect;
	TMenuItem *Disconnect;
	TTimer *Timer4;
	void __fastcall ListenClick(TObject *Sender);
	void __fastcall ServerSocket1Accept(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall ServerSocket1ClientConnect(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall ServerSocket1ClientDisconnect(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall ServerSocket1ClientError(TObject *Sender, TCustomWinSocket *Socket,
          TErrorEvent ErrorEvent, int &ErrorCode);
	void __fastcall ServerSocket1ClientRead(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall ConnectClick(TObject *Sender);
	void __fastcall ClientSocket1Connect(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall ClientSocket1Disconnect(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall DisconnectClick(TObject *Sender);
	void __fastcall ClientSocket1Error(TObject *Sender, TCustomWinSocket *Socket, TErrorEvent ErrorEvent,
          int &ErrorCode);
	void __fastcall ClientSocket1Read(TObject *Sender, TCustomWinSocket *Socket);
	void __fastcall Timer1Timer(TObject *Sender);
	void __fastcall Timer2Timer(TObject *Sender);
	void __fastcall Timer3Timer(TObject *Sender);
	void __fastcall Timer4Timer(TObject *Sender);










private:	// User declarations
public:		// User declarations
	__fastcall TForm1(TComponent* Owner);
	void __fastcall TForm1::New_shape(TShape* who_bingo[5][5], int left);
	void __fastcall TForm1::New_label(TLabel* who_label[5][5], int left, int temp[5][5]);
	void __fastcall TForm1::Random(int temp[5][5], int num, bool state);
	void __fastcall TForm1::reset_all();
	void __fastcall TForm1::initial();
	void __fastcall TForm1::start_game();
	void __fastcall TForm1::first_attack(int num);
	void __fastcall TForm1::mark_num(int num);
	void __fastcall TForm1::show_value(int temp[5][5], TLabel *label[5][5]);
	void __fastcall TForm1::get_value(int temp[5][5], int no);
	int TForm1::bingo_V_H(int bingo_num, bool bingo, int v_or_h, int click[5][5]);
	int TForm1::bingo_slash(int bingo_num, bool bingo, int l_or_r, int click[5][5]);
	void __fastcall TForm1::Get_Select__Number();
	void __fastcall TForm1::Send_Get_Id();
	void __fastcall TForm1::sure_next_game();
	void __fastcall TForm1::next_game_get_answer(int* nextgame);
	void __fastcall TForm1::next_game_judge();
	void __fastcall TForm1::next_game_send_pocket(String yse_or_no, int do_other);
	void __fastcall TForm1::show_result(String str);
	void __fastcall TForm1::bingo_show();
	void __fastcall TForm1::read_packet(AnsiString asStr);
	void __fastcall TForm1::send_pocket(TShape *player_bingo[5][5], int temp1[5][5], int row, int col, int judge, int attack, int click[5][5]);
	void __fastcall TForm1::choose_num(TObject *Sender);
};
//---------------------------------------------------------------------------
extern PACKAGE TForm1 *Form1;
//---------------------------------------------------------------------------
#endif
